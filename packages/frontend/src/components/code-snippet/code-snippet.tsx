import { ComponentArchitectureCodeSnippet } from "../../model/autogenerated-graphql-strapi";
import styles from "./code-snippet.module.scss";
import { darcula } from 'react-syntax-highlighter/dist/esm/styles/prism';
import sanitizeHtml from 'sanitize-html';
import { mySanitizeHtml, githubModuleBaseURL } from '../../helper/generic-helper';
import dynamic from "next/dynamic";

const SyntaxHighlighter:any = dynamic(() => import('react-syntax-highlighter').then((mod:any) => mod.Prism));


//------------------ TYPES
interface CodeSnippetProps {
  codeSnippet: ComponentArchitectureCodeSnippet;
  moduleId: string;
}


//------------------ COMPONENT
const CodeSnippet : React.FC<CodeSnippetProps> = (props:CodeSnippetProps) => {
  
  //----- render
  return (
    <div className={"mt-4"}>
      {props.codeSnippet.description && (<div dangerouslySetInnerHTML={{__html: mySanitizeHtml(sanitizeHtml, sanitizeHtml.defaults, props.codeSnippet.description)}} />)}
      <div className={`mt-2 w-100 text-left text-md-right mt-3 mt-md-0 ${styles["code-snippet__file-path"]}`}><a href={props.codeSnippet.fileLink??githubModuleBaseURL(props.moduleId)+props.codeSnippet.filePath} target="_blank" rel="noreferrer">{props.codeSnippet.filePath!.substr(props.codeSnippet.filePath!.lastIndexOf("/")+1, props.codeSnippet.filePath!.length)}</a></div>
      <SyntaxHighlighter language={props.codeSnippet.language} style={darcula} showLineNumbers customStyle={{background: 'rgb(29,29,29)'}}>
        {props.codeSnippet.code}
      </SyntaxHighlighter>
    </div>
  );
}

export default CodeSnippet;