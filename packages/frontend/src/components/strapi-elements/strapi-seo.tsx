import { NextSeo } from "next-seo";
import { OpenGraphImages } from "next-seo/lib/types";
import { FC } from "react";
import { getStrapiMedia } from "../../helper/strapi-helper";
import { ComponentMetaMetadata, Maybe } from "../../model/autogenerated-graphql-strapi";

interface StrapiSeoProps {
  metadata: Maybe<ComponentMetaMetadata>
}

const StrapiSeo:FC<StrapiSeoProps> = ({ metadata }:StrapiSeoProps) => {
  // Prevent errors if no metadata was set
  if (!metadata) return null;

  return (
    <NextSeo
      title={metadata.metaTitle}
      description={metadata.metaDescription}
      openGraph={{
        // Title and description are mandatory
        title: metadata.metaTitle,
        description: metadata.metaDescription,
        // Only include OG image if we have it
        // Careful: if you disable image optimization in Strapi, this will break
        ...(metadata.shareImage && {
          images: Object.values(metadata.shareImage!.formats).map((image:any) => {
            let ogImage: OpenGraphImages = {
              url: getStrapiMedia(image.url)!,
              width: image.width,
              height: image.height,
            };
            return ogImage;
          })
        }),
      }}
      // Only included Twitter data if we have it
      twitter={{
        ...(metadata.twitterCardType && { cardType: metadata.twitterCardType }),
        ...(metadata.twitterUsername && { cardType: metadata.twitterUsername }),
      }}
    />
  );
};


export default StrapiSeo;
