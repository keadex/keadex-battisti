import {Query as StrapiQuery} from "../model/autogenerated-graphql-strapi";

export interface ErrorResponse {
  statusCode: number;
  message: string;
}

export interface ErrorException {
  message: string;
}

export interface ErrorExtension {
  code: string;
  serviceName: string;
  response: ErrorResponse;
  exception: ErrorException;
}

export interface Error {
  message?: string;
  extensions: ErrorExtension;
}

// -------- BASE RESPONSE
export interface BaseResponse<T> {
  data?: Query<T>;
  errors: Error[];
}

export interface StrapiResponse {
  data?: StrapiQuery;
}

// -------- QUERY
export interface Query<T> {
  experiences?: T;
  randomQuotes?: T;
  experienceGraph?: T;
  login: T;
}

// -------- BATTISTI LOGIN
export interface BattistiLogin {
  accessToken: string;
}

// -------- QUOTE
export interface Quote {
  content: string;
  author: string;
  image?: string;
}


// --------  TASK
export interface Task {
  key: string
}


// --------  COMPANY
export interface Company {
  name: string,
  city: string,
  country: string,
  logoFilename: string
}


// --------  EMPLOYER
export interface Employer {
  from: string,
  to?: string,
  company: Company
}


// --------  SECTOR
export interface Sector {
  key: string
}


// --------  SKILL
export interface Skill {
  name: string,
}

export interface SkillUsage {
  skill: Skill,
  usagePercentage: number
}


// --------  EXPERIENCE
export interface Experience {
  role: string,
  from: string,
  to?: string,
  avatarFileName: string,
  tasks: Task[],
  employers: Employer[],
  customers: Company[],
  sectors: Sector[],
  skills: SkillUsage[]
}


// --------  FORCE GRAPH
export namespace ForceGraph {
  
  export interface Node {
    id: string,
    name: string,
    val: number,
    group: number
  }

  export interface Link {
    source: string,
    target: string
  }

  export interface Graph {
    nodes: Node[],
    links: Link[]
  }
}

// --------  COOKIEBOT CookieConsent
export interface CookieConsent {
  stamp: string,
  necessary: boolean,
  preferences: boolean,
  statistics: boolean,
  marketing: boolean,
  ver: number,
  utc: number,
  region: string
}
